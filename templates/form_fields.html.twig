{% extends 'bootstrap_4_layout.html.twig' %}

{% block choice_widget_collapsed -%}
    {% if enable_select2|default(false) %}
        {%- set attr = attr|merge({
            'data-enable-select2': 'true',
            'data-select2-options': select2_options|default({})|json_encode
        }) -%}
    {% endif %}
    {{- parent() -}}
{%- endblock choice_widget_collapsed %}

{% block datepicker_widget %}
    {% set pickerId = id ~ '_picker' %}
    {% set pickerTarget = '#' ~ pickerId %}
    {% set attr = attr|merge({
        'data-target': pickerTarget,
        'class': 'datetimepicker-input'
    }) %}
    <div class="input-group date" id="{{ pickerId }}" data-target-input="nearest"
         data-enable-datepicker="true"
         data-datepicker-options="{{ datepicker_options|default({})|json_encode|e('html_attr') }}">
        {{ block('form_widget_simple') }}
        <div class="input-group-append" data-target="{{ pickerTarget }}" data-toggle="datetimepicker">
            <div class="input-group-text"><i class="fas fa-calendar"></i></div>
        </div>
    </div>
{% endblock %}

{% block time_widget -%}
    {% if enable_datepicker|default(false) and widget == 'single_text' %}
        {{ block('datepicker_widget') }}
    {% else -%}
        {{- parent() -}}
    {% endif %}
{%- endblock %}

{% block date_widget -%}
    {% if enable_datepicker|default(false) and widget == 'single_text' %}
        {{ block('datepicker_widget') }}
    {% else -%}
        {{- parent() -}}
    {% endif %}
{%- endblock %}

{% block datetime_widget -%}
    {% if enable_datepicker|default(false) and widget == 'single_text' %}
        {{ block('datepicker_widget') }}
    {% else -%}
        {{- parent() -}}
    {% endif %}
{%- endblock %}

{% block trix_editor_widget %}
    {{ block('hidden_widget') }}
    <trix-editor id="{{ id }}_editor" input="{{ id }}" class="trix-content"></trix-editor>
    {% if enable_upload is not empty %}
        <script>
            var editor = document.getElementById('{{ id|e('js') }}_editor');

            function uploadFileAttachment(attachment) {
                var data = new FormData();
                data.append('file', attachment.file);

                $.ajax({
                    type: 'post',
                    url: '{{ enable_upload|e('js') }}',
                    contentType: false,
                    processData: false,
                    data: data,
                })
                    .done(function (response) {
                        if (response && response.url && response.href) {
                            attachment.setAttributes(response);
                        } else {
                            attachment.remove();
                        }
                    })
                    .fail(function () {
                        attachment.remove();
                    });
            }

            editor.addEventListener('trix-attachment-add', function (event) {
                if (event.attachment.file) {
                    uploadFileAttachment(event.attachment);
                }
            })
        </script>
    {% endif %}
{% endblock %}